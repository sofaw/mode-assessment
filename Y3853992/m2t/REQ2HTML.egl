<!DOCTYPE html>
<html>
<style>
body {
	font-family: "Arial";
}

.indented {
	padding-left: 50pt;
}

details summary::-webkit-details-marker { 
	color: #0000ff;
}

details {
  width: 100%;
  border-radius: 5px;
  background-color: #f1f1f1;
  padding: 2px 6px;
  margin: 10px 0px;
}

#leafNode::-webkit-details-marker { 
	display: none;
}

ul {
  width: 50%;
  border-radius: 5px;
  background-color: #ddd;
  margin: 5px 0px;
}

summary {
  font-size: 18px;
}

#detailsText {
  width: 50%;
  border-radius: 5px;
  background-color: #ddd;
  padding: 10px 20px;
  margin: 10px 20px;
  font-size: 16px;
}

#showDetails summary::-webkit-details-marker { 
	display: none;
}

#showDetails summary {
	text-decoration: underline;
	color: #0000ff;
	padding-left: 20px;
	font-size: 16px;
}

#showDetails summary:before {
	content: "show details";
}

#showDetails[open] summary:before {
	content: "hide details";
}

#showDetails:hover {
	cursor: pointer;
}

details summary::-webkit-details-marker:hover {
	cursor: pointer;
}

#hideCompleted {
	background-color: #0000ff;
	margin-bottom: 20px;
	font-size: 18px;
	border-style: hidden;
	border-radius: 5px;
	display: inline;
	color: #ffffff;
}

#hideCompleted:hover {
    box-shadow: 5px 10px 8px #888888;
}

.tab button {
	background-color: inherit;
    float: left;
    border: none;
    outline: none;
    cursor: pointer;
    padding: 14px 16px;
    transition: 0.3s;
    font-size: 18px;
}

.tab button:hover {
    background-color: #ddd;
}

/* Style the tab */
.tab {
    overflow: hidden;
    border: 1px solid #ccc;
    background-color: #f1f1f1;
}

/* Create an active/current tablink class */
.tab button.active {
    background-color: #ccc;
}

/* Style the tab content */
.tabcontent {
    display: none;
    padding: 6px 12px;
    border: 1px solid #ccc;
    border-top: none;
}

#progressContainer {
    width: inherit;
    background-color: #ddd;
    margin: 10px 20px;
}

#progressBar {
    width: 0;
    height: 30px;
    background-color: #0000ff;
    text-align: center;
    line-height: 30px;
    color: white; 
}

</style>

<head>
	<title>Y3853992</title>
</head>
<body>

<div class="tab">
  <button class="tablinks" onclick="openTab(event, 'Requirements')" id="defaultOpen">Requirements</button>
  <button class="tablinks" onclick="openTab(event, 'TeamMembers')">Team Members</button>
  <button class="tablinks" onclick="openTab(event, 'TestCases')">Test Cases</button>
  <button class="tablinks" onclick="openTab(event, 'Conflicts')">Conflicts</button>
</div>

<div id="Requirements" class="tabcontent">
  <h1 style="color: #0000ff;">Requirements</h1> 
  <button id="hideCompleted" onclick="hideCompleted()">Hide completed</button>
  [%for (rootReq in rm.requirements.select(r | r.parentDecomposition.size() == 0)) {%]
    [% rootReq.generateRequirementTree(); %]
  [%}%]
</div>

<div id="TeamMembers" class="tabcontent">
  <h1 style="color: #00ff00;">Team Members</h1>
  [%for (teamMember in rm.teamMembers) {%]
    [% teamMember.showAssignedRequirements(); %]
  [%}%]
</div>

<div id="TestCases" class="tabcontent">
  <h1 style="color: #00ffff;">Test Cases</h1>      
  [%for (testCase in rm.testCases) {%]
    [% testCase.showVerifies(); %]
  [%}%] 
</div>

<div id="Conflicts" class="tabcontent">
  <h1 style="color: #ff0000;">Conflicts</h1> 
  <p>There are conflicts between the following pairs of requirements:</p>  
  <ul style="background-color: #ff0000; width: 30%;">   
    [%for (conflict in rm.conflicts) {%]
      <li>[%=conflict.first.identifier%] and [%=conflict.second.identifier%]</li>
    [%}%] 
  </ul>
</div>


<script>
document.getElementById("defaultOpen").click();

function hideCompleted() {
	// Change button text
	var hcButton = document.getElementById("hideCompleted");
    if (hcButton.innerHTML=="Hide completed"){
    	hcButton.innerHTML = "Show completed";
    } else {
    	hcButton.innerHTML = "Hide completed";
    }
    
    // Toggle completed requirements
    var completedRequirements = document.getElementsByClassName("completed");
    var i;
	for (i = 0; i < completedRequirements.length; i++) {
    	if (completedRequirements[i].style.display === "none") {
        	completedRequirements[i].style.display = "block";
    	} else {
        	completedRequirements[i].style.display = "none";
    	}
	}
}

function openTab(evt, tabName) {
    var i, tabcontent, tablinks;

    tabcontent = document.getElementsByClassName("tabcontent");
    for (i = 0; i < tabcontent.length; i++) {
        tabcontent[i].style.display = "none";
    }

    tablinks = document.getElementsByClassName("tablinks");
    for (i = 0; i < tablinks.length; i++) {
        tablinks[i].className = tablinks[i].className.replace(" active", "");
    }

    document.getElementById(tabName).style.display = "block";
    evt.currentTarget.className += " active";
}
</script>
</body>
</html>

[% operation Requirement generateRequirementTree() { %]
	[% if(self.progress == 1.0) {%]
		<div class="completed">
	[%} else {%]
		<div class="notCompleted">
	[%}%]

		<details>
  		[% if(self.decomposition.size() == 0) {%]
			<summary id="leafNode">
		[%} else {%]
			<summary>
		[%}%]
  			Requirement: [%=self.identifier%]  
  			
  			<details id="showDetails">
  			  <summary></summary>
  			  <div class="indented" id="detailsText">
  			    <p>Type: [%=self.type%]</p>
  		        <p>Description: "[%=self.description%]"</p>
  		        <p>Team Members: [% self.printTeamMembers(); %]</p>
  		        [% if(self.type == RequirementType#System) { %]
  		          <p>Test Cases: [% self.printTestCases(); %]</p>
  		        [% } %]
  		       </div>
  		    </details>
  						
  			[% var progressPercent = self.progress * 100; %]
  			<div id="progressContainer">
 			  <div id="progressBar" style="width: [%=progressPercent%]%;">[%=progressPercent%]%</div>
			</div>
  			
  			</summary>
			[%for (req in self.decomposition) {%]
  				<div class="indented">
  					[% req.generateRequirementTree(); %]
  				</div>	
			[% } %]		
		</details>
	</div>
[% } %]

[% operation TeamMember showAssignedRequirements() { %]
	<h4>[%=self.name%]</h4>
	<ul style="background-color: #00ff00; width: 30%;">
		[% for(req in self.requirements) { %]
			<li>Requirement: [%=req.identifier%]</li>
		[% } %]
	</ul>
[% } %]

[% operation TestCase showVerifies() { %]
	<h4>Test case: "[%=self.description%]"</h4>
	<p>Verifies requirements:</p>
	<ul style="background-color: #00ffff; width: 30%;">
		[% for(req in self.verifies) { %]
			<li>Requirement: [%=req.identifier%]</li>
		[% } %]
	</ul>
[% } %]

[% operation Requirement printTeamMembers() { %]
	<ul style="background-color: #00ff00;">
		[% for(tm in self.teamMembers) { %]
			<li id="teamMember">[%=tm.name%]</li>
		[% } %]
	</ul>
[% } %]

[% operation Requirement printTestCases() { %]
	<ul style="background-color: #00ffff;">
		[% for(tc in self.testCases) { %]
			<li>"[%=tc.description%]"</li>
		[% } %]
	</ul>
[% } %]

